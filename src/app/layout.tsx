import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout() {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        style={{
          position: 'relative',
          minHeight: '100vh',
          overflowX: 'hidden',
        }}
      >
        <div style={{ position: 'relative', zIndex: 1 }}></div>
        {/* Arc image layer, layer on top of the page */}
        <div
          style={{
            position: 'absolute',
            top: '-10x',
            left: 0,
            width: '100%',
            display: 'flex',
            justifyContent: 'center',
            pointerEvents: 'none',
            zIndex: 11,
          }}
        >
          <img
            src="/arc.png"
            alt="Decorative Arc"
            style={{
              width: '120%',
              maxWidth: '1200px',
              height: 'auto',
              display: 'block',
              pointerEvents: 'none',
              userSelect: 'none',
            }}
          />
        </div>
        {/* Blur image layer, layer below the arc image */}
        <div
          style={{
            position: 'absolute',
            top: '220px',
            left: 0,
            width: '110%',
            display: 'flex',
            justifyContent: 'center',
            pointerEvents: 'none',
            zIndex: 10,
          }}
        >
          <img
            src="/blur.png"
            alt="Blur Layer"
            style={{
              width: '140%',
              maxWidth: 'none',
              height: 'auto',
              display: 'block',
              pointerEvents: 'none',
              userSelect: 'none',
              position: 'relative',
              left: '30%',
              transform: 'translateX(-30%)',
            }}
          />
        </div>
      </body>
    </html>
  )
}
